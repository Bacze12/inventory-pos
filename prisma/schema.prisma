generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isActive  Boolean  @default(true)
  role      UserRole @default(CASHIER)
  Sale      Sale[]
  shifts    Shift[]

  @@index([email])
  @@index([role])
}

model Product {
  id                   Int                    @id @default(autoincrement())
  name                 String
  createdAt            DateTime               @default(now())
  categoryId           Int?
  deletedAt            DateTime?
  extraTaxRate         Float?
  finalPrice           Float?
  hasExtraTax          Boolean                @default(false)
  isActive             Boolean                @default(true)
  isIvaExempt          Boolean                @default(false)
  marginPercent        Float?
  minSellingPrice      Float?
  purchasePrice        Float?
  sellingPrice         Float?
  sku                  String?
  stock                Int                    @default(0)
  supplierId           Int?
  updatedAt            DateTime               @default(now())
  Inventory            Inventory[]
  PriceHistory         PriceHistory[]
  Category             Category?              @relation(fields: [categoryId], references: [id])
  Supplier             Supplier?              @relation(fields: [supplierId], references: [id])
  ProductProfitability ProductProfitability[]
  saleItems            SaleItem[]

  @@index([categoryId])
  @@index([isActive, deletedAt])
  @@index([name])
  @@index([sku])
  @@index([supplierId])
}

model Sale {
  id            Int           @id @default(autoincrement())
  total         Float
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  extraTaxTotal Float?
  ivaAmount     Float?
  paymentMethod PaymentMethod @default(CASH)
  subtotal      Float?
  userId        Int?
  User          User?         @relation(fields: [userId], references: [id])
  items         SaleItem[]
  shiftId       Int?
  shift         Shift?        @relation(fields: [shiftId], references: [id])

  @@index([shiftId])
  @@index([createdAt])
  @@index([userId, createdAt])
  @@index([userId])
}

model SaleItem {
  id             Int     @id @default(autoincrement())
  quantity       Int
  price          Float
  saleId         Int
  productId      Int
  basePrice      Float?
  extraTaxAmount Float?
  ivaAmount      Float?
  totalPrice     Float?
  product        Product @relation(fields: [productId], references: [id])
  sale           Sale    @relation(fields: [saleId], references: [id])

  @@index([productId])
  @@index([saleId])
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  Product     Product[]

  @@index([isActive])
  @@index([name])
}

model Inventory {
  id        Int                   @id @default(autoincrement())
  productId Int
  quantity  Int
  type      InventoryMovementType @default(IN)
  date      DateTime              @default(now())
  notes     String?
  Product   Product               @relation(fields: [productId], references: [id])

  @@index([date])
  @@index([productId, date])
  @@index([productId])
}

model PriceHistory {
  id            Int      @id @default(autoincrement())
  productId     Int
  date          DateTime @default(now())
  purchasePrice Float
  sellingPrice  Float
  reason        String?
  Product       Product  @relation(fields: [productId], references: [id])

  @@index([productId, date])
}

model ProductProfitability {
  id         Int      @id @default(autoincrement())
  productId  Int
  date       DateTime @default(now())
  costPrice  Float
  sellPrice  Float
  margin     Float
  marginRate Float
  Product    Product  @relation(fields: [productId], references: [id])

  @@index([productId, date])
}

model Supplier {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  phone     String
  address   String
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime
  Product   Product[]

  @@index([email])
  @@index([isActive])
  @@index([name])
}
model Shift {
  id          Int       @id @default(autoincrement())
  startTime   DateTime  @default(now())
  endTime     DateTime?
  userId      Int
  status      ShiftStatus @default(OPEN)
  initialCash Float
  finalCash   Float?
  notes       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id])
  cashDrawer  CashDrawer[]
  sales       Sale[]

  @@index([userId])
  @@index([status])
}

model CashDrawer {
  id          Int           @id @default(autoincrement())
  shiftId     Int
  type        MovementType
  amount      Float
  reason      String?
  createdAt   DateTime      @default(now())
  shift       Shift         @relation(fields: [shiftId], references: [id])

  @@index([shiftId])
}

enum ShiftStatus {
  OPEN
  CLOSED
  CANCELLED
}

enum MovementType {
  CASH_IN
  CASH_OUT
  INITIAL_CASH
  FINAL_CASH
}

enum InventoryMovementType {
  IN
  OUT
}

enum PaymentMethod {
  CASH
  CARD
  TRANSFER
}

enum UserRole {
  ADMIN
  CASHIER
  MANAGER
}
